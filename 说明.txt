安装vue-cli 全局安装 npm install --global vue-cli
检测是否安装成功 vue -version
构建一个基于vue-cli的项目
vue init webpack project（free-name）[一系列的配置信息，可以一直默认]
安装完成 进入项目目录 cd project
安装一下（依赖文件） npm install
运行 npm run dev（开发版本）
搭建vue-cli  脚手架

查阅官方文档 安装，版本在升级，安装方式变更
https://github.com/vuejs/vue-docs-zh-cn/blob/master/vue-cli/cli.md

清空cmd  cls+enter

安装完毕，更改项目
【入门】
1：新建一个组件 haha 
2：引入，在app.vue组件中调用
3：在app.vue中含有两个组件 helloworld 和 haha ，查看控制台，可以发现使用hash标识，区分
css data等信息

【组件嵌套demo】
定义三个组件：app-header app-footer users
其中users中实现自适应样式，使用flex

[安装路由]
npm install vue-router --save-dev
在当前项目下，安装路由

1: 在mainjs中导入路由，配置路由参数
2：导入需要的组件
3：在入口组件中，使用router-view
4：链接使用 router-link

[安装 vue-resource vue自带的http服务]
npm install vue-resource --save-dev
在当前项目下，安装resource

http://jsonplaceholder.typicode.com/[网络测试接口api，在线]

【跨域 fetch axios】
设置 配置文件中的proxyTable

axios插件，首先 安装
cnpm install axios
在mainjs中调用
为了使其能够全局使用$axios，类似jquery能够使用＄,需要声明一下
Vue.prototype.$axios = axios
同时 需要设置 默认的参数
例如：
axios.defaults.headers.common['token'] = 'f4c902c9ae5a2a9d8f84868ad064e706'
axios.defaults.headers.post['Content-type'] = 'application/json'


